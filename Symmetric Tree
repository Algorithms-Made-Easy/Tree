package com.tree.traversal.Problems;

public class SymmetricTree {
	
	public static void main(String[] args) {
		TreeNode left = new TreeNode(2);
		TreeNode right = new TreeNode(3);
		TreeNode root = new TreeNode(1, left, right);
		left.right = new TreeNode(5);
		right.right = new TreeNode(7);
		
		if(root == null)
	        System.out.println("Tree is Symmetric");
		else {
			boolean isSymmetric = isMirror(root.left, root.right);
			System.out.println("Tree is "+ (isSymmetric ? "Symmetric" : "not Symmetric"));
		}
	}
	
    public static boolean isMirror(TreeNode a, TreeNode b) {
        
        if(a == null && b == null)
            return true;
        
        if(a != null && b != null)
            return a.val == b.val 				// Check Value Symmetry
            && isMirror(a.left, b.right) 		// Check structure symmetry
            && isMirror(a.right, b.left);		// Check structure symmetry
        
        else
            return false;
    }
	  
}

class TreeNode {
	int val;
	TreeNode left;
	TreeNode right;

	TreeNode() {
	}

	TreeNode(int val) {
		this.val = val;
	}

	TreeNode(int val, TreeNode left, TreeNode right) {
		this.val = val;
		this.left = left;
		this.right = right;
	}
}
